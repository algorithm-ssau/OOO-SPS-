version: '3'
services:
  nodejs:
    build:
      dockerfile: Dockerfile
      context: ./nodejs
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: ./nodejs/.env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB 
    ports:
      - "3001:3000"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
  
  react-app:
    build: ./react-app
    container_name: react-app
    ports:
    - '3000:3000'
    stdin_open: true
    tty: true

  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: ./nodejs/.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:  
      - dbdata:/data/db   
    networks:
      - app-network 
  
  python:
    build: ./python
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      FLASK_APP: script.py
      FLASK_ENV: development

  mongo_seed:
    build: ./mongo_seed
    depends_on:
      - db

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:  
  mongo_db:
  app: